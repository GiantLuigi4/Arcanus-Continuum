plugins {
	id 'maven-publish'
	alias libs.plugins.quilt.loom
}

archivesBaseName = project.archives_base_name
version = project.version
group = project.maven_group

// messy workaround for bug in quilt loom 1.3.3
project.configurations.all {
	exclude(group: "net.fabricmc", module: "fabric-loader")
	exclude(group: "net.fabricmc.fabric-api")
}

repositories {
	maven { url "https://maven.quiltmc.org/repository/snapshot" }
	maven { url "https://maven.shedaniel.me" }
	maven { url "https://maven.terraformersmc.com" }
	maven { url "https://maven.ladysnake.org/releases" }
	maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
	maven { url "https://maven.blamejared.com" }
	maven { url "https://maven.kosmx.dev/" }
	maven { url "https://api.modrinth.com/maven" }
	maven { url "https://cursemaven.com" }
	maven { url "https://minecraft.curseforge.com/api/maven/" }
	maven { url "https://maven.jamieswhiteshirt.com/libs-release" }
	maven { url "https://jitpack.io" }
}

dependencies {
	minecraft libs.minecraft

	mappings variantOf(libs.quilt.mappings) { classifier "intermediary-v2" }

	modImplementation libs.quilt.loader
	modImplementation libs.quilted.fabric.api

	include libs.mixinextras
	implementation libs.mixinextras
	annotationProcessor libs.mixinextras

	modImplementation libs.bundles.cca
	modImplementation libs.patchouli
	modImplementation libs.midnightlib
	modImplementation libs.smartbrainlib

	include libs.reach.attr
	modImplementation libs.reach.attr

	modImplementation libs.firstperson
	modImplementation libs.pehkui
	modLocalRuntime libs.kanos

	modLocalRuntime libs.modmenu
}

loom {
	accessWidenerPath = file("src/main/resources/arcanuscontinuum.accesswidener")
}

processResources {
	inputs.property "version", version

	filesMatching('quilt.mod.json') {
		expand "version": version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release.set(17)
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17

	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${archivesBaseName}" }
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {

	}
}
